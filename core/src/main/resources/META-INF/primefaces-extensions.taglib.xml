<?xml version="1.0"?>
<facelet-taglib
    version="2.0"
    xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd">
    <namespace>http://primefaces.org/ui/extensions</namespace>
    <!-- Functions -->
    <function>
        <function-name>escapeSelector</function-name>
        <function-class>org.primefaces.extensions.util.ComponentUtils</function-class>
        <function-signature>java.lang.String
            escapeSelector(java.lang.String)</function-signature>
    </function>
    <function>
        <function-name>escapeHtml4</function-name>
        <function-class>org.apache.commons.lang3.StringEscapeUtils</function-class>
        <function-signature>java.lang.String
            escapeHtml4(java.lang.String)</function-signature>
    </function>
    <function>
        <function-name>unescapeHtml4</function-name>
        <function-class>org.apache.commons.lang3.StringEscapeUtils</function-class>
        <function-signature>java.lang.String
            unescapeHtml4(java.lang.String)</function-signature>
    </function>
    <function>
        <function-name>escapeHtml3</function-name>
        <function-class>org.apache.commons.lang3.StringEscapeUtils</function-class>
        <function-signature>java.lang.String
            escapeHtml3(java.lang.String)</function-signature>
    </function>
    <function>
        <function-name>unescapeHtml3</function-name>
        <function-class>org.apache.commons.lang3.StringEscapeUtils</function-class>
        <function-signature>java.lang.String
            unescapeHtml3(java.lang.String)</function-signature>
    </function>
    <function>
        <function-name>escapeXml</function-name>
        <function-class>org.apache.commons.lang3.StringEscapeUtils</function-class>
        <function-signature>java.lang.String escapeXml(java.lang.String)</function-signature>
    </function>
    <function>
        <function-name>unescapeXml</function-name>
        <function-class>org.apache.commons.lang3.StringEscapeUtils</function-class>
        <function-signature>java.lang.String
            unescapeXml(java.lang.String)</function-signature>
    </function>
    <function>
        <function-name>encodeURL</function-name>
        <function-class>org.primefaces.extensions.util.URLEncoderWrapper</function-class>
        <function-signature>java.lang.String encode(java.lang.String)</function-signature>
    </function>
    <!-- Converters -->
    <tag>
        <tag-name>convertJson</tag-name>
        <converter>
            <converter-id>org.primefaces.extensions.converter.JsonConverter</converter-id>
        </converter>
        <attribute>
            <description>
                <![CDATA[Data type of the value object (optional). Any primitive type, array, non generic or generic type is supported. Data type is sometimes required to convert a value to a JSON representation. All data types should be fully qualified. Default is null.]]>
            </description>
            <name>type</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>convertLocale</tag-name>
        <converter>
            <converter-id>org.primefaces.extensions.converter.LocaleConverter</converter-id>
        </converter>
        <attribute>
            <description>
                <![CDATA[Character which will be used to separate the country and language. Default is '_'.]]>
            </description>
            <name>separator</name>
            <required>false</required>
            <type>java.lang.Character</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>convertTimelineEvents</tag-name>
        <converter>
            <converter-id>org.primefaces.extensions.converter.TimelineEventsConverter</converter-id>
        </converter>
        <attribute>
            <description>
                <![CDATA[Time zone for UTC / Local date conversion. It can be a TimeZone object as well as a String with time zone Id.]]>
            </description>
            <name>timeZone</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <!-- Behaviors -->
    <tag>
        <tag-name>javascript</tag-name>
        <behavior>
            <behavior-id>org.primefaces.extensions.behavior.JavascriptBehavior</behavior-id>
            <handler-class>org.primefaces.extensions.behavior.javascript.JavascriptBehaviorHandler</handler-class>
        </behavior>
        <attribute>
            <description><![CDATA[The javascript which should be executed.]]>
            </description>
            <name>execute</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the behavior, when set to false behavior will not be rendered.]]>
            </description>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[The name of the event.]]>
            </description>
            <name>event</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <!-- Components -->
    <tag>
        <description>
            <![CDATA[NOTICE: You must also include the org.primefaces.extensions.resources-ckeditor:*.jar artifact. Client behavior events: save - fired when the save button will be pressed (javax.faces.event.AjaxBehaviorEvent), initialize - fired after the editor was successfully intialized (javax.faces.event.AjaxBehaviorEvent), focus - fired when the editor gets focus (javax.faces.event.AjaxBehaviorEvent), blur - fired when the editor loses focus (javax.faces.event.AjaxBehaviorEvent), wysiwygMode - fired after switching to the wysiwyg mode (javax.faces.event.AjaxBehaviorEvent), sourceMode - fired after switching to the source mode (javax.faces.event.AjaxBehaviorEvent), dirty - fired after the content has been changed wihout leaving the editor focus (javax.faces.event.AjaxBehaviorEvent), change - fired after blur and if the content has been changed (javax.faces.event.AjaxBehaviorEvent).]]>
        </description>
        <tag-name>ckEditor</tag-name>
        <component>
            <component-type>org.primefaces.extensions.component.CKEditor</component-type>
            <renderer-type>org.primefaces.extensions.component.CKEditorRenderer</renderer-type>
        </component>
        <attribute>
            <description><![CDATA[Unique identifier of the component in a naming container.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[An EL expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description><![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Value of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description><![CDATA[Height of the editor. Default value: 200px.]]>
            </description>
            <name>height</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Width of the editor. Default value: 600px.]]>
            </description>
            <name>width</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Theme of the editor.]]>
            </description>
            <name>theme</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Skin of the editor. Valid skins are: kama, office2003 and v2.]]>
            </description>
            <name>skin</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[The toolbar layout.]]>
            </description>
            <name>toolbar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Defines if the editor is readOnly.]]>
            </description>
            <name>readOnly</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[The color of the interface. For example: #33fc14.]]>
            </description>
            <name>interfaceColor</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Default language is used in case no language is set using language option and the editor is not able to use the user language.]]>
            </description>
            <name>language</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[This setting is used to set the CKEditor language. In case this option is not set, the editor will automatically try to load with user language if supported, otherwise the default language will be used.]]>
            </description>
            <name>defaultLanguage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[This setting specifies the CSS file to be used to apply style to the contents.]]>
            </description>
            <name>contentsCss</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Interval in ms for dirty checking. This is not required for the most cases but some internal CKEditor plugins does not throw the events which can be cached to check for changes. This timer checks for changes for the defined interval. Also this feature can be expensive for big documents. Default: 1000ms. 0 = deactivated.]]>
            </description>
            <name>checkDirtyInterval</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description><![CDATA[Path to a custom CKEditor js config file.]]>
            </description>
            <name>customConfig</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[The tab index to assign to the editor. If not given, no tab index will be assigned.]]>
            </description>
            <name>tabindex</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[A display name for this component.]]>
            </description>
            <name>label</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id.]]>
            </description>
            <name>converter</name>
            <required>false</required>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description><![CDATA[Marks component as required.]]>
            </description>
            <name>required</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Defines if the content of the component should be escaped or not.]]></description>
            <name>escape</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[NOTICE: You must also include the org.primefaces.extensions.resources-codemirror:*.jar artifact. Client behavior events: change - fired every time the content of the editor is changed (javax.faces.event.AjaxBehaviorEvent), highlightComplete - fired whenever the editor's content has been fully highlighted (javax.faces.event.AjaxBehaviorEvent), focus - fired when the editor gets focus (javax.faces.event.AjaxBehaviorEvent), blur - fired when the editor loses focus (javax.faces.event.AjaxBehaviorEvent).]]>
        </description>
        <tag-name>codeMirror</tag-name>
        <component>
            <component-type>org.primefaces.extensions.component.CodeMirror</component-type>
            <renderer-type>org.primefaces.extensions.component.CodeMirrorRenderer</renderer-type>
            <handler-class>org.primefaces.extensions.component.codemirror.CodeMirrorHandler</handler-class>
        </component>
        <attribute>
            <description><![CDATA[Unique identifier of the component in a naming container.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[An EL expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description><![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Value of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description><![CDATA[Method providing suggestions.]]></description>
            <name>completeMethod</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description><![CDATA[The theme to style the editor with.]]>
            </description>
            <name>theme</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The mode to use. When not given, this will default to the first mode that was loaded. It may be a string, which either simply names the mode or is a MIME type associated with the mode. Alternatively, it may be an object containing configuration options for the mode, with a name property that names the mode (for example {name: "javascript", json: true}).]]>
            </description>
            <name>mode</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[How many spaces a block (whatever that means in the edited language) should be indented. The default is 2.]]>
            </description>
            <name>indentUnit</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Whether to use the context-sensitive indentation that the mode provides (or just indent the same as the line before). Defaults to true.]]>
            </description>
            <name>smartIndent</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[The width of a tab character. Defaults to 4.]]>
            </description>
            <name>tabSize</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Configures whether the editor should re-indent the current line when a character is typed that might change its proper indentation (only works if the mode supports indentation). Default is true.]]>
            </description>
            <name>electricChars</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Configures the keymap to use. The default is "default", which is the only keymap defined in codemirror.js itself. Extra keymaps are found in the keymap directory.]]>
            </description>
            <name>keyMap</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Whether CodeMirror should scroll or wrap for long lines. Defaults to false (scroll).]]>
            </description>
            <name>lineWrapping</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Whether to show line numbers to the left of the editor.]]>
            </description>
            <name>lineNumbers</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[At which number to start counting lines. Default is 1.]]>
            </description>
            <name>firstLineNumber</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Can be used to force a 'gutter' (empty space on the left of the editor) to be shown even when no line numbers are active. This is useful for setting markers.]]>
            </description>
            <name>gutter</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When enabled (off by default), this will make the gutter stay visible when the document is scrolled horizontally.]]>
            </description>
            <name>fixedGutter</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[This disables editing of the editor content by the user. If the special value "nocursor" is given (instead of simply true), focusing of the editor is also disallowed.]]>
            </description>
            <name>readOnly</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Determines whether brackets are matched whenever the cursor is moved next to a bracket.]]>
            </description>
            <name>matchBrackets</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Highlighting is done by a pseudo background-thread that will work for workTime milliseconds, and then use timeout to sleep for workDelay milliseconds. The defaults are 200 and 300, you can change these options to make the highlighting more or less aggressive.]]>
            </description>
            <name>workTime</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Highlighting is done by a pseudo background-thread that will work for workTime milliseconds, and then use timeout to sleep for workDelay milliseconds. The defaults are 200 and 300, you can change these options to make the highlighting more or less aggressive.]]>
            </description>
            <name>workDelay</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Indicates how quickly CodeMirror should poll its input textarea for changes. Most input is captured by events, but some things, like IME input on some browsers, doesn't generate events that allow CodeMirror to properly detect it. Thus, it polls. Default is 100 milliseconds.]]>
            </description>
            <name>pollInterval</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description><![CDATA[The maximum number of undo levels that the editor stores. Defaults to 40.]]>
            </description>
            <name>undoDepth</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description><![CDATA[The tab index to assign to the editor. If not given, no tab index will be assigned.]]>
            </description>
            <name>tabindex</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[A display name for this component.]]>
            </description>
            <name>label</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Can be used to specify extra keybindings for the editor. When given, should be an object with property names like Ctrl-A, Home, and Ctrl-Alt-Left.]]>
            </description>
            <name>extraKeys</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id.]]>
            </description>
            <name>converter</name>
            <required>false</required>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description><![CDATA[Component(s) to process partially instead of whole view.]]>
            </description>
            <name>process</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Javascript handler to execute before ajax request is begins.]]>
            </description>
            <name>onstart</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Javascript handler to execute when ajax request is completed.]]>
            </description>
            <name>oncomplete</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Javascript handler to execute when ajax request fails.]]>
            </description>
            <name>onerror</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Javascript handler to execute when ajax request succeeds.]]>
            </description>
            <name>onsuccess</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Global ajax requests are listened by ajaxStatus component, setting global to false will not trigger ajaxStatus. Default value: true.]]>
            </description>
            <name>global</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[When set to true, ajax requests are not queued. Default value: false.]]>
            </description>
            <name>async</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Defines if the content of the component should be escaped or not.]]></description>
            <name>escape</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Defines if the suggestions should be escaped or not.]]></description>
            <name>escapeSuggestions</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Marks component as required.]]>
            </description>
            <name>required</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    <tag>
        <description><![CDATA[DynaForm allows to show a dynamic form described by model.]]></description>
        <tag-name>dynaForm</tag-name>
        <component>
            <component-type>org.primefaces.extensions.component.DynaForm</component-type>
            <renderer-type>org.primefaces.extensions.component.DynaFormRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a naming container.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An EL expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIOutput</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Instance of type DynaFormModel representing model of this component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the request-scoped variable for the underlaying object for each iteration.]]>
            </description>
            <name>var</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the request-scoped variable which contains the prefix of the client Id within pe:dynaFormControl. This property allows to get the whole clientId of a component within pe:dynaFormControl. The whole client Id is sometimes required for JavaScript or RequestContext.update(...).]]>
            </description>
            <name>varContainerId</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag whether the form has to be submitted automatically after current page has been loaded. Note: the form can be submitted if it contains at least one submit button. Default value is false.]]>
            </description>
            <name>autoSubmit</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag whether the extended grid has to be shown opened on page load. Default value is false.]]>
            </description>
            <name>openExtended</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Button bar position. Possible values are "top" | "bottom" | "both". Default value is "bottom".]]>
            </description>
            <name>buttonBarPosition</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style of the main container element. Default value is null.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the main container element. Default value is null.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description><![CDATA[Specifies a control for a certain typed element within DynaForm.]]></description>
        <tag-name>dynaFormControl</tag-name>
        <component>
            <component-type>org.primefaces.extensions.component.UIDynaFormControl</component-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a naming container.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An EL expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIOutput</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Type corresponding to form control. Default value is "default".]]>
            </description>
            <name>type</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Provided reference between label and corresponding control like "for" attribute in h:outputLabel or p:outputLabel. Default value is null.]]>
            </description>
            <name>for</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the container element for this control. Default value is null.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Widget for selecting a rectangular area of an image. Client behavior events: selectEnd - fired after the selection finished (org.primefaces.extensions.event.ImageAreaSelectEvent), selectStart - fired after the selection started (org.primefaces.extensions.event.ImageAreaSelectEvent), selectChange - fired after the selection changed (org.primefaces.extensions.event.ImageAreaSelectEvent).]]>
        </description>
        <tag-name>imageAreaSelect</tag-name>
        <component>
            <component-type>org.primefaces.extensions.component.ImageAreaSelect</component-type>
            <renderer-type>org.primefaces.extensions.component.ImageAreaSelectRenderer</renderer-type>
        </component>
        <attribute>
            <description><![CDATA[Unique identifier of the component in a naming container.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[An EL expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description><![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[The target image.]]>
            </description>
            <name>for</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A string of the form "width:height" which represents the aspect ratio to maintain. Example: "4:3".]]>
            </description>
            <name>aspectRatio</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If set to true, selection area will disappear when selection ends. Default value: false.]]>
            </description>
            <name>autoHide</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If set to a number greater than zero, showing or hiding the plugin is done with a graceful fade in/fade out animation. Default value: 0.]]>
            </description>
            <name>fadeSpeed</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If set to true, resize handles are shown on the selection area; if set to "corners", only corner handles are shown. Default value: false.]]>
            </description>
            <name>handles</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[If set to true, selection area is hidden.]]>
            </description>
            <name>hide</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[True height of the image (if scaled with the CSS width and height properties).]]>
            </description>
            <name>imageHeight</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description><![CDATA[True width of the image (if scaled with the CSS width and height properties).]]>
            </description>
            <name>imageWidth</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description><![CDATA[Determines whether the selection area should be movable. Default value: true.]]>
            </description>
            <name>movable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If set to true, clicking outside the selection area will not start a new selection (ie. the user will only be able to move/resize the existing selection area). Default value: false.]]>
            </description>
            <name>persistent</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Determines whether the selection area should be resizable. Default value: true.]]>
            </description>
            <name>resizable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[If set to true, selection area is shown.]]>
            </description>
            <name>show</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The z-index value to be assigned to plugin elements; normally, imgAreaSelect figures it out automatically, but there are a few cases when it's necessary to set it explicitly.]]>
            </description>
            <name>zIndex</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description><![CDATA[Maximum selection height (in pixels).]]>
            </description>
            <name>maxHeight</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description><![CDATA[Maximum selection width (in pixels).]]>
            </description>
            <name>maxWidth</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description><![CDATA[Minimum selection height (in pixels).]]>
            </description>
            <name>minHeight</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description><![CDATA[Minimum selection width (in pixels).]]>
            </description>
            <name>minWidth</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A jQuery object or selector string that specifies the parent element that the plugin will be appended to. Default value: "body".]]>
            </description>
            <name>parentSelector</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Enables/disables keyboard support. Default value: false.]]>
            </description>
            <name>keyboardSupport</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Widget for rotating or resizing an image. Client behavior events: rotate - fired after image rotation (org.primefaces.extensions.event.RotateEvent), resize - fired after image resizing (org.primefaces.extensions.event.ResizeEvent).]]>
        </description>
        <tag-name>imageRotateAndResize</tag-name>
        <component>
            <component-type>org.primefaces.extensions.component.ImageRotateAndResize</component-type>
            <renderer-type>org.primefaces.extensions.component.ImageRotateAndResizeRenderer</renderer-type>
        </component>
        <attribute>
            <description><![CDATA[Unique identifier of the component in a naming container.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[An EL expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description><![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[The target image.]]>
            </description>
            <name>for</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Time picker component for time (hours / minutes) inputs. Client behavior events: timeSelect - fires when an hour / minutes is selected (org.primefaces.extensions.event.TimeSelectEvent), close - fires when the time picker is closed (org.primefaces.extensions.event.CloseEvent), beforeShow - fires before the time picker is rendered and displayed (org.primefaces.extensions.event.BeforeShowEvent).]]>
        </description>
        <tag-name>timePicker</tag-name>
        <component>
            <component-type>org.primefaces.extensions.component.TimePicker</component-type>
            <renderer-type>org.primefaces.extensions.component.TimePickerRenderer</renderer-type>
        </component>
        <attribute>
            <description><![CDATA[Unique identifier of the component in a namingContainer.]]></description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]></description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An EL expression referring to a server side UIComponent instance in a backing bean.]]></description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description><![CDATA[Value of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description><![CDATA[Name of the client side widget.]]></description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Disables the time picker when set to true.]]></description>
            <name>disabled</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[A localized user presentable name for this component.]]></description>
            <name>label</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Style of the time picker input element.]]></description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Style class of the time picker input element.]]></description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[The character to use to separate hours and minutes. Default is :.]]></description>
            <name>timeSeparator</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines whether or not to show AM/PM with selected time. Default is false.]]></description>
            <name>showPeriod</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Corner of the dialog to position. Default is 'left top'.]]></description>
            <name>dialogPosition</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Corner of the input to position. Default is 'left bottom'.]]></description>
            <name>inputPosition</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Mode specifies appearance of time picker. Possible values are 'popup', 'spinner', 'inline'. Default is 'spinner'.]]></description>
            <name>mode</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Specifies first displayed hour. Possible range is 0-23. Default is 0.]]></description>
            <name>startHours</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description><![CDATA[Specifies last displayed hour. Possible range is 0-23. Default is 23.]]></description>
            <name>endHours</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Specifies first displayed minute. Possible range is 0-55. Default is 0.]]></description>
            <name>startMinutes</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Specifies last displayed minute. Possible range is 0-55. Default is 55.]]></description>
            <name>endMinutes</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description><![CDATA[Specifies interval of displayed minutes. Default is 5.]]></description>
            <name>intervalMinutes</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Specifies number of rows for the input tables, minimum 2, makes more sense if you use multiple of 2. Default is 4.]]></description>
            <name>rows</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if the hours section is displayed or not. Set to false to get a minute only dialog. Default is true.]]></description>
            <name>showHours</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if the minutes section is displayed or not. Set to false to get a hours only dialog. Default is true.]]></description>
            <name>showMinutes</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Shows an 'ok' button to confirm the edit. Default is false.]]></description>
            <name>showCloseButton</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Shows the 'deselect' time button. Default is false.]]></description>
            <name>showDeselectButton</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Shows the 'now' button. Default is false.]]></description>
            <name>showNowButton</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines a callback to enable / disable certain hours. Example: function onHourShow(hour). Default is null.]]></description>
            <name>onHourShow</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines a callback to enable / disable certain minutes. Example: function onMinuteShow(hour, minute). Default is null.]]></description>
            <name>onMinuteShow</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Define when the timepicker is shown. 'focus': when the input gets focus, 'button' when the button trigger element is clicked, 'both': when the input gets focus and when the button is clicked. Default is 'focus'.]]></description>
            <name>showOn</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[String or java.util.Locale representing user locale. Default is a locale specified in view root.]]></description>
            <name>locale</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Timeline is an interactive visualization chart to visualize events in time. Client behavior events: add - fired when event is about the be added (org.primefaces.extensions.event.timeline.TimelineAddEvent), change - fired after the user modified the start date or end date of an event by moving / dragging the event in the timeline (org.primefaces.extensions.event.timeline.TimelineModificationEvent), edit - fired when event is about to be edited. This event is fired when the user double clicks on an event (org.primefaces.extensions.event.timeline.TimelineModificationEvent), delete - fired when event is about to be deleted. That means the user clicked on the "delete event" button on the right of an event (org.primefaces.extensions.event.timeline.TimelineModificationEvent), select - fired when the user clicks on an event (org.primefaces.extensions.event.timeline.TimelineSelectEvent), rangechange - fired when the visible range is changing. Fired repeatedly while the user is modifying the visible time by moving / dragging the timeline or by zooming / scrolling (org.primefaces.extensions.event.timeline.TimelineRangeEvent), rangechanged - fired when the visible range has been changed. Fired once after the user has modified the visible time by moving / dragging the timeline or by zooming / scrolling (org.primefaces.extensions.event.timeline.TimelineRangeEvent)]]>
        </description>
        <tag-name>timeline</tag-name>
        <component>
            <component-type>org.primefaces.extensions.component.Timeline</component-type>
            <renderer-type>org.primefaces.extensions.component.TimelineRenderer</renderer-type>
            <handler-class>org.primefaces.extensions.component.timeline.TimelineTagHandler</handler-class>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An EL expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the component]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Container style class]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An instance of TimelineModel representing the backing model.]]>
            </description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the request-scoped variable for underlaying object in the TimelineEvent for each iteration.]]>
            </description>
            <name>var</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[User locale for i18n messages. The attribute can be either a String or Locale object.]]>
            </description>
            <name>locale</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[User time zone to convert start / end dates for displaying. Time zone is useful because dates are normally stored in UTC on the server-side, but should be displayed in browser in user local time zone. The attribute can be either a String or TimeZone object. If no time zone is provided, the used time zone is TimeZone.getDefault().]]>
            </description>
            <name>timeZone</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The height of the timeline in pixels, as a percentage, or "auto". When the height is set to "auto", the height of the timeline is automatically adjusted to fit the contents. If not, it is possible that events get stacked so high, that they are not visible in the timeline. When height is set to "auto", a minimum height can be specified with the option minHeight. Default is "auto".]]>
            </description>
            <name>height</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Specifies a minimum height for the Timeline in pixels. Useful when height is set to "auto". Default is 0.]]>
            </description>
            <name>minHeight</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The width of the timeline in pixels or as a percentage. Default is "100%".]]>
            </description>
            <name>width</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Check if the timeline container is resized, and if so, resize the timeline. Useful when the webpage is resized. Default is true.]]>
            </description>
            <name>responsive</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If false, the horizontal axis is drawn at the bottom. If true, the axis is drawn on top. Default is false.]]>
            </description>
            <name>axisOnTop</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The width of the drag areas in pixels. When an event with date range is selected, it has a drag area on the left and right side, with which the start or end dates of the event can be manipulated. Default is 10.]]>
            </description>
            <name>dragAreaWidth</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, the events can be edited, changed, created and deleted. Events can only be editable when the option selectable is true (default). When editable is true, the timeline can fire AJAX events "change", "edit", "add", "delete".
                This global setting "editable" can be overwritten for individual events by setting a value in field "editable". Default is false.]]>
            </description>
            <name>editable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, events on the timeline are selectable. Selectable events can fire AJAX "select" events. Default is true.]]>
            </description>
            <name>selectable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, the timeline is zoomable. When the timeline is zoomed, AJAX "rangechange" events are fired. Default is true.]]>
            </description>
            <name>zoomable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, the timeline is movable. When the timeline is moved, AJAX "rangechange" events are fired. Default is true.]]>
            </description>
            <name>moveable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The initial start date for the axis of the timeline. If not provided, the earliest date present in the events is taken as start date. Default is null.]]>
            </description>
            <name>start</name>
            <required>false</required>
            <type>java.util.Date</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The initial end date for the axis of the timeline. If not provided, the latest date present in the events is taken as end date. Default is null.]]>
            </description>
            <name>end</name>
            <required>false</required>
            <type>java.util.Date</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Set a minimum Date for the visible range. It will not be possible to move beyond this minimum. Default is null.]]>
            </description>
            <name>min</name>
            <required>false</required>
            <type>java.util.Date</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Set a maximum Date for the visible range. It will not be possible to move beyond this maximum. Default is null.]]>
            </description>
            <name>max</name>
            <required>false</required>
            <type>java.util.Date</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Set a minimum zoom interval for the visible range in milliseconds. It will not be possible to zoom in further than this minimum. Default is 10.]]>
            </description>
            <name>zoomMin</name>
            <required>false</required>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Set a maximum zoom interval for the visible range in milliseconds. It will not be possible to zoom out further than this maximum. Default value equals 315360000000000 ms (about 10000 years).]]>
            </description>
            <name>zoomMax</name>
            <required>false</required>
            <type>java.lang.Long</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The minimal margin in pixels between events. Default is 10.]]>
            </description>
            <name>eventMargin</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The minimal margin in pixels between events and the horizontal axis. Default is 10.]]>
            </description>
            <name>eventMarginAxis</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Specifies the style for the timeline events. Choose from "dot" or "box". Default is "box".]]>
            </description>
            <name>eventStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, items can be moved from one group to another. Only applicable when groups are used. Default is true.]]>
            </description>
            <name>groupsChangeable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If false, the groups legend is drawn at the left side of the timeline. If true, the groups legend is drawn on the right side. Default is false.]]>
            </description>
            <name>groupsOnRight</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[By default, the width of the groups legend is adjusted to the group names. A fixed width can be set for the groups legend by specifying the "groupsWidth" as a string, for example "200px". Default is null.]]>
            </description>
            <name>groupsWidth</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, the start and end of an event will be snapped nice integer values when moving or resizing the event. Default is true.]]>
            </description>
            <name>snapEvents</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, the events are stacked above each other to prevent overlapping events. This option cannot be used in combination with grouped events. Default is true.]]>
            </description>
            <name>stackEvents</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, the timeline shows a red, vertical line displaying the current time. Default is true.]]>
            </description>
            <name>showCurrentTime</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[By default, the timeline shows both minor and major date labels on the horizontal axis. For example the minor labels show minutes and the major labels show hours. When "showMajorLabels" is false, no major labels are shown. Default is true.]]>
            </description>
            <name>showMajorLabels</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[By default, the timeline shows both minor and major date labels on the horizontal axis. For example the minor labels show minutes and the major labels show hours. When "showMinorLabels" is false, no minor labels are shown. When both "showMajorLabels" and "showMinorLabels" are false, no horizontal axis will be visible. Default is true.]]>
            </description>
            <name>showMinorLabels</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Show the button "Create new event" in the a navigation menu. Default is false.]]>
            </description>
            <name>showButtonNew</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Show a navigation menu with buttons to move and zoom the timeline. Default is false.]]>
            </description>
            <name>showNavigation</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    <tag>
        <description><![CDATA[]]>
        </description>
        <tag-name>inputNumber</tag-name>
        <component>
            <component-type>org.primefaces.extensions.component.InputNumber</component-type>
            <renderer-type>org.primefaces.extensions.component.InputNumberRenderer</renderer-type>
        </component>
        <attribute>
            <description><![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[An EL expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description><![CDATA[Value of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An EL expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. In case it's a static text, it must refer to a converter id.]]>
            </description>
            <name>converter</name>
            <required>false</required>
            <type>java.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When set true, process validations logic is executed at apply request values phase for this component. Default is false.]]>
            </description>
            <name>immediate</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[Marks component as required.]]>
            </description>
            <name>required</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[A method expression referring to a method validationg the input.]]>
            </description>
            <name>validator</name>
            <required>false</required>
            <type>javax.faces.validator.Validator</type>
        </attribute>
        <attribute>
            <description><![CDATA[A method binding expression referring to a method for handling a valuchangeevent.]]>
            </description>
            <name>valueChangeListener</name>
            <required>false</required>
            <type>javax.faces.event.ValueChangeListener</type>
        </attribute>
        <attribute>
            <description><![CDATA[Message to display when required field validation fails.]]>
            </description>
            <name>requiredMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Message to display when conversion fails.]]>
            </description>
            <name>converterMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Message to display when validation fails.]]>
            </description>
            <name>validatorMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Disable the component]]>
            </description>
            <name>disabled</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description><![CDATA[User label]]>
            </description>
            <name>label</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Callback on change event]]>
            </description>
            <name>onchange</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Inline style of the component]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Coontainer style class]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Decimal separator char. Default is '.'.]]>
            </description>
            <name>decimalSeparator</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Thousand separator char. Default is ','.]]>
            </description>
            <name>thousandSeparator</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Desired symbol or unit. Default is none.]]>
            </description>
            <name>symbol</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Symbol suffix. Default is prefix.]]>
            </description>
            <name>symbolPosition</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Minimum values. Default is 0.00.]]>
            </description>
            <name>minValue</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Maximum values. Default is 999999999.99.]]>
            </description>
            <name>maxValue</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Controls the rounding method. Default is Round-Half-Up Symmetric.]]>
            </description>
            <name>roundMethod</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Number of decimal places. Default are taken from minValue and MaxValue.]]>
            </description>
            <name>decimalPlaces</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Controls empty input display behavior, options are empty, zero, sign. Default is empty.]]>
            </description>
            <name>emptyValue</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Access key to transfer focus to the input element.]]></description>
            <name>accesskey</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Alternate textual description of the input element.]]></description>
            <name>alt</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Controls browser autocomplete behavior.]]></description>
            <name>autocomplete</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Direction indication for text that does not inherit directionality.]]></description>
            <name>dir</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[A localized user presentable name.]]></description>
            <name>lang</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Maximum number of characters that may be entered in this field.]]></description>
            <name>maxlength</name>
            <required>false</required>
            <type>int</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when input element loses focus.]]></description>
            <name>onblur</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when input element is clicked.]]></description>
            <name>onclick</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when input element is double clicked.]]></description>
            <name>ondblclick</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when input element receives focus.]]></description>
            <name>onfocus</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when a key is pressed down over input element.]]></description>
            <name>onkeydown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when a key is pressed and released over input element.]]></description>
            <name>onkeypress</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when a key is released over input element.]]></description>
            <name>onkeyup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when a pointer input element is pressed down over input element.]]></description>
            <name>onmousedown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when a pointer input element is moved within input element.]]></description>
            <name>onmousemove</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when a pointer input element is moved away from input element.]]></description>
            <name>onmouseout</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when a pointer input element is moved onto input element.]]></description>
            <name>onmouseover</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when a pointer input element is released over input element.]]></description>
            <name>onmouseup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Client side callback to execute when text within input element is selected by user.]]></description>
            <name>onselect</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Advisory tooltip information.]]></description>
            <name>tabindex</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description><![CDATA[Advisory tooltip information.]]></description>
            <name>title</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Waypoint makes it easy to execute a custom logic whenever you scroll to an element. Client behavior events: reached - fired when the user scrolls past the element. (org.primefaces.extensions.event.WaypointEvent)]]></description>
        <tag-name>waypoint</tag-name>
        <component>
            <component-type>org.primefaces.extensions.component.Waypoint</component-type>
            <renderer-type>org.primefaces.extensions.component.WaypointRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An EL expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The target component registered as waypoint.]]>
            </description>
            <name>for</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[jQuery selector for any target elements registered as waypoints.]]>
            </description>
            <name>forSelector</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The context (as component) defines which scrollable element the waypoint belongs to and acts within. Default is window (if no context or contextSelector were specified).]]>
            </description>
            <name>forContext</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The context (as jQuery selector) defines which scrollable element the waypoint belongs to and acts within. Default is window (if no context or contextSelector were specified).]]>
            </description>
            <name>forContextSelector</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Determines how far the top of the element must be from the top of the browser window to trigger a waypoint. It can be a number, which is taken as a number of pixels (can be also negativ, e.g. -10), a string representing a percentage of the viewport height (e.g. '50%') or a function that will return a number of pixels. Default is 0.]]>
            </description>
            <name>offset</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, and multiple waypoints are triggered in one scroll, this waypoint will trigger even if it is not the last waypoint reached. If false, it will only trigger if it is the last waypoint. Default is true.]]>
            </description>
            <name>continuous</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, this waypoint will not trigger if an offset change during a refresh causes it to pass the current scroll point. Default is false.]]>
            </description>
            <name>onlyOnScroll</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, the waypoint will be destroyed when triggered. Default is false.]]>
            </description>
            <name>triggerOnce</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
</facelet-taglib>